apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo
    spec:
      nodeSelector:
        type: mongoer
      containers:
      - image: mongo:4.4
        name: mongo
        args: ["--dbpath","/data/db", "--auth"]
        livenessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        env:
        - name: MONGO_INITDB_DATABASE
          value: "zapper"
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "elnano33!"
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
        - name: "init-database"
          mountPath: "/docker-entrypoint-initdb.d/"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongodb-pvc"
      - name: "init-database"
        configMap:
          name: create-db-configmap
